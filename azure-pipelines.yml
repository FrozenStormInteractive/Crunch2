trigger:
  branches:
    include:
      - master
      - develop
      - refs/tags/v*
      - release/*
      - feature/*
      - hotfix/*

stages:

  - stage: build
    displayName: Build
    jobs:
      - job: windows
        displayName: Windows
        strategy:
          matrix:
            2019 x86_64 Shared Release:
              VM_IMAGE: 'windows-2019'
              GENERATOR: Visual Studio 16 2019
              GENERATOR_ARCH: x64
              BUILD_ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: ON
            2019 x86_64 Static Release:
              VM_IMAGE: 'windows-2019'
              GENERATOR: Visual Studio 16 2019
              GENERATOR_ARCH: x64
              BUILD_ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: OFF
            2019 x86 Shared Release:
              VM_IMAGE: 'windows-2019'
              GENERATOR: Visual Studio 16 2019
              GENERATOR_ARCH: Win32
              BUILD_ARCH: x86
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: ON
            2019 x86 Static Release:
              VM_IMAGE: 'windows-2019'
              GENERATOR: Visual Studio 16 2019
              GENERATOR_ARCH: Win32
              BUILD_ARCH: x86
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: OFF
        pool:
          vmImage: $(VM_IMAGE)
        steps:
          - checkout: self

          - task: CMake@1
            displayName: Configure
            inputs:
              cmakeArgs: -G "$(GENERATOR)" -A $(GENERATOR_ARCH) -S $(Build.SourcesDirectory) -B . -DCMAKE_BUILD_TYPE=$(BUILD_CONFIG)
                -DCRN_BUILD_EXAMPLES=ON -DCRN_BUILD_SHARED_LIBS=$(BUILD_SHARED) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)

          - task: CMake@1
            displayName: Build
            inputs:
              cmakeArgs: --build . --config $(BUILD_CONFIG)

          - task: CMake@1
            displayName: Install
            inputs:
              cmakeArgs: --install . --config $(BUILD_CONFIG)

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: $(System.JobDisplayName)

      - job: linux
        displayName: Linux
        strategy:
          matrix:
            x86_64 Shared Release:
              ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: ON
            x86_64 Static Release:
              ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: OFF
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - bash: sudo apt-get update -yqq && sudo apt install -y ninja-build
            displayName: Install Ninja

          - task: CMake@1
            displayName: Configure
            inputs:
              cmakeArgs: -G Ninja -S $(Build.SourcesDirectory) -B . -DCMAKE_BUILD_TYPE=$(BUILD_CONFIG) -DCRN_BUILD_EXAMPLES=OFF
                -DCRN_BUILD_SHARED_LIBS=$(BUILD_SHARED) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)

          - task: CMake@1
            displayName: Build
            inputs:
              cmakeArgs: --build . --config $(BUILD_CONFIG)

          - task: CMake@1
            displayName: Install
            inputs:
              cmakeArgs: --install . --config $(BUILD_CONFIG)

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: $(System.JobDisplayName)

      - job: macos
        displayName: macOS
        strategy:
          matrix:
            x86_64 Shared Release:
              ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: ON
            x86_64 Static Release:
              ARCH: x64
              BUILD_CONFIG: MinSizeRel
              BUILD_SHARED: OFF
        pool:
          vmImage: 'macOS-latest'
        steps:
          - task: CMake@1
            displayName: Configure
            inputs:
              cmakeArgs: -G Xcode -S $(Build.SourcesDirectory) -B . -DCMAKE_BUILD_TYPE=$(BUILD_CONFIG) -DCRN_BUILD_EXAMPLES=OFF
                -DCRN_BUILD_SHARED_LIBS=$(BUILD_SHARED) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)

          - task: CMake@1
            displayName: Build
            inputs:
              cmakeArgs: --build . --config $(BUILD_CONFIG)

          - task: CMake@1
            displayName: Install
            inputs:
              cmakeArgs: --install . --config $(BUILD_CONFIG)

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: $(System.JobDisplayName)
